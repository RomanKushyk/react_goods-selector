{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","select","name","setState","remove","good","goods","splice","indexOf","clearSelection","showSelectedGoods","length","join","slice","at","this","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gRAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,OAAS,SAACC,GACR,EAAKC,UAAS,SAACJ,GACb,MAAO,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAIrDE,OAAS,SAACC,GAAD,OAAkB,EAAKF,UAAS,SAACJ,GACxC,IAAMO,EAAQP,EAAMC,cAIpB,OAFAM,EAAMC,OAAOD,EAAME,QAAQH,GAAO,GAE3B,CAAEL,cAAeM,O,EAG1BG,eAAiB,WACf,EAAKN,SAAS,CAAEH,cAAe,M,EAGjCU,kBAAoB,WAClB,IAAQV,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcW,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUX,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcY,KAAK,SAA7B,iBACF,QACE,MAAM,GAAN,OAAUZ,EAAca,MAAM,GAAI,GAAGD,KAAK,MAA1C,gBAAuDZ,EAAcc,IAAI,GAAzE,mB,4CAIN,WAAU,IAAD,OACCd,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UAEIhB,EAAcW,OACVI,KAAKL,oBACL,oBAGJV,EAAcW,OAEV,wBACEM,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKT,kBAJT,eAUA,MAGR,oBAAIO,UAAU,QAAd,SACGnB,EAAgBsB,KAAI,SAACd,GAAD,OACnB,qBAEEW,UAAS,sBACPhB,EAAcoB,SAASf,GACnB,oBACA,IALR,UAQGA,EAECL,EAAcoB,SAASf,GAEnB,wBACEY,KAAK,SACLD,UAAU,wBACVE,QAAS,WACP,EAAKd,OAAOC,IAJhB,oBAWA,wBACEY,KAAK,SACLD,UAAU,qBACVE,QAAS,WACP,EAAKjB,OAAOI,IAJhB,mBAtBDA,e,GApEDgB,IAAMC,WA6GTxB,ICjIfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5bc28a35.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport './button.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  select = (name: string) => {\n    this.setState((state) => {\n      return { selectedGoods: [...state.selectedGoods, name] };\n    });\n  };\n\n  remove = (good: string) => this.setState((state) => {\n    const goods = state.selectedGoods;\n\n    goods.splice(goods.indexOf(good), 1);\n\n    return { selectedGoods: goods };\n  });\n\n  clearSelection = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods.join(' and ')} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.at(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {\n            selectedGoods.length\n              ? this.showSelectedGoods()\n              : 'No goods selected'\n          }\n          {\n            selectedGoods.length\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button button--x\"\n                  onClick={() => {\n                    this.clearSelection();\n                  }}\n                >\n                  X\n                </button>\n              )\n              : ''\n          }\n        </h1>\n        <ul className=\"goods\">\n          {goodsFromServer.map((good) => (\n            <li\n              key={good}\n              className={`goods__item ${\n                selectedGoods.includes(good)\n                  ? 'goods__isSelected'\n                  : ''\n              }`}\n            >\n              {good}\n              {\n                selectedGoods.includes(good)\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"button button--remove\"\n                      onClick={() => {\n                        this.remove(good);\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"button button--add\"\n                      onClick={() => {\n                        this.select(good);\n                      }}\n                    >\n                      Add\n                    </button>\n                  )\n              }\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}