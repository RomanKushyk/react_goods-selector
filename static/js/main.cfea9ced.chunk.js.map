{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","name","setState","removeGood","good","filter","item","clearSelection","showSelectedGoods","length","join","slice","at","this","toggleButtonName","includes","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gRAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GACb,MAAO,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAIrDE,WAAa,SAACC,GAAD,OAAkB,EAAKF,UAAS,SAACJ,GAK5C,MAAO,CAAEC,cAJKD,EAAMC,cAEOM,QAAO,SAAAC,GAAI,OAAIA,IAASF,U,EAKrDG,eAAiB,WACf,EAAKL,SAAS,CAAEH,cAAe,M,EAGjCS,kBAAoB,WAClB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcW,KAAK,SAA7B,iBACF,QACE,MAAM,GAAN,OAAUX,EAAcY,MAAM,GAAI,GAAGD,KAAK,MAA1C,gBAAuDX,EAAca,IAAI,GAAzE,mB,4CAIN,WAAU,IAAD,OACCb,EAAkBc,KAAKf,MAAvBC,cACFe,EAAmB,SAACR,GAAD,OACvBP,EAAcgB,SAAST,GACnB,SACA,OAQN,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UAEIjB,EAAcU,OACVI,KAAKL,oBACL,oBAGJT,EAAcU,OAEV,wBACEQ,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKX,kBAJT,eAUA,MAGR,oBAAIS,UAAU,QAAd,SACGpB,EAAgBuB,KAAI,SAACf,GAAD,OACnB,qBAEEY,UAAS,sBACPjB,EAAcgB,SAASX,GACnB,oBACA,IALR,UAQGA,EACD,wBACEa,KAAK,SACLD,UAAS,yBACWF,EAAiBV,IAErCc,QAAS,WA9CA,IAACZ,IA+CKF,EA9CzBL,EAAcgB,SAAST,GACnB,EAAKH,WAAWG,GAChB,EAAKN,WAAWM,IAsCZ,SASGQ,EAAiBV,OAjBfA,e,GA9EDgB,IAAMC,WAyGTxB,IC7HfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cfea9ced.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport './button.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  selectGood = (name: string) => {\n    this.setState((state) => {\n      return { selectedGoods: [...state.selectedGoods, name] };\n    });\n  };\n\n  removeGood = (good: string) => this.setState((state) => {\n    const goods = state.selectedGoods;\n\n    const clearedGoods = goods.filter(item => item !== good);\n\n    return { selectedGoods: clearedGoods };\n  });\n\n  clearSelection = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods.join(' and ')} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.at(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const toggleButtonName = (item: string) => (\n      selectedGoods.includes(item)\n        ? 'remove'\n        : 'add'\n    );\n    const toggleButton = (item: string) => (\n      selectedGoods.includes(item)\n        ? this.removeGood(item)\n        : this.selectGood(item)\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {\n            selectedGoods.length\n              ? this.showSelectedGoods()\n              : 'No goods selected'\n          }\n          {\n            selectedGoods.length\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button button--x\"\n                  onClick={() => {\n                    this.clearSelection();\n                  }}\n                >\n                  X\n                </button>\n              )\n              : ''\n          }\n        </h1>\n        <ul className=\"goods\">\n          {goodsFromServer.map((good) => (\n            <li\n              key={good}\n              className={`goods__item ${\n                selectedGoods.includes(good)\n                  ? 'goods__isSelected'\n                  : ''\n              }`}\n            >\n              {good}\n              <button\n                type=\"button\"\n                className={\n                  `button button--${toggleButtonName(good)}`\n                }\n                onClick={() => {\n                  toggleButton(good);\n                }}\n              >\n                {toggleButtonName(good)}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}